name: Test package installation

on:
  push:
    branches: [ develop, dev/*, release/* ]
  pull_request:
    branches: [ develop, dev/*, release/* ]
  workflow_dispatch:
    inputs:
      user-to-notify:
        description: "Github username to notify"
        required: false
        default: ""

jobs:
  standard-packages:
    timeout-minutes: 30
    strategy:
      matrix:
        python-versions: [ '3.8', '3.9', '3.10', '3.11' ]
        os: [ubuntu-latest, macos-latest] #, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Build frontends
        run: |
          python tools/frontend/bundle_build.py

      - name: Install Taipy without dependencies
        run: |
          cat tools/packages/taipy*/MANIFEST.in > MANIFEST.in
          pip install .
          rm -rf taipy

          python -c "import taipy as tp; tp.Scenario"
          python -c "import taipy as tp; tp.gui"
          python -c "import taipy as tp; tp.rest"

          echo """
          import taipy
          from pathlib import Path
          taipy_gui_core_path = Path(taipy.__file__).absolute().parent / 'gui_core' / 'lib' / 'taipy-gui-core.js'
          if not taipy_gui_core_path.exists():
              raise FileNotFoundError(f'taipy-gui-core.js not found in {taipy_gui_core_path}')
          """ > ${{ runner.temp }}/verify_gui_core.py
          python ${{ runner.temp }}/verify_gui_core.py

      - name: Notify user if failed
        if: failure()
        run: |
          if [[ -n "${{ github.event.inputs.user-to-notify }}" ]]; then
            curl "${{ secrets.notify_endpoint }}" -d '{"username": "${{ github.event.inputs.user-to-notify }}", "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" }' -H "Content-Type: application/json"
          fi
        shell: bash
